{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","item","ReactDOM","render","document","getElementById"],"mappings":"2LAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAKTC,mBAAS,IALA,mBAKrCC,EALqC,KAK1BC,EAL0B,KAe5C,OACI,mCACA,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAST,EACTU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACG,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFFS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBACtB,CAACqB,KAAM,GACPe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAqBtC,OAfAC,qBAAU,WACN1B,EAAQC,GAAU0B,MACd,SAAAC,GACIX,QAAQC,IAAIU,GACZC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAIZ,CAACtB,IAEGuB,EDXwBM,CAAa7B,GAA/Ba,EATsB,EAS5BN,KAAae,EATe,EASfA,QAKpB,OAJAN,QAAQC,IAAIK,GAKR,qCACA,6BAAKtB,IACJsB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAIYL,EAAOJ,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aExB9BmB,EAAe,WAAM,MAEG5C,mBAAS,CAAC,cAFb,mBAE1B6C,EAF0B,KAEd9C,EAFc,KAUjC,OACO,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWtB,KAAI,SAAAuB,GAAI,OACf,cAAC,EAAD,CAEAhC,SAAYgC,GADNA,Y,MCjB7BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.afbe2bfa.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes  from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const [inputValue,setInputValue] = useState('');\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cat => [inputValue,...cat]);\r\n            setInputValue(''); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value = {inputValue}\r\n            onChange = {handleInputChange}\r\n            /> \r\n         </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=tC3jGKdO75MrPUXCpfVCDWq3cghRtdlA`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n           <img src={url} alt={title}></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n/*     const [count, setcount] = useState(0)\r\n */   \r\n    /* const [images, setimages] = useState([]);\r\n    useEffect(()=>{\r\n        getGifs(category).then(setimages);\r\n    }, [category]) */\r\n\r\n    const {data: images,loading} = useFetchGifs(category);\r\n    console.log(loading);\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className='card-grid'>\r\n\r\n            \r\n                {\r\n                    images.map(img => (\r\n                     <GifGridItem key={img.id} {...img}></GifGridItem>\r\n                    ))\r\n                }\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState(\r\n        {data: [], \r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(\r\n            imgs => {\r\n                console.log(imgs);\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })   \r\n                }, 3000);\r\n                \r\n            }\r\n        )\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n // const categories = ['One Punch', 'Samuray X', 'Dragon Ball'];\r\n const [categories, setCategories] = useState(['One Punch'])  \r\n \r\n/*  const handleAdd = () => {\r\n    // setCategories([...categories, 'Nueva'])\r\n     setCategories(['Nueva',...categories])\r\n \r\n    } */\r\n \r\n return (\r\n        <>\r\n           <h2>GifExpertApp</h2> \r\n           <AddCategory setCategories={setCategories}></AddCategory>\r\n           <hr/>\r\n           <ol>\r\n              {\r\n                   categories.map(item => (\r\n                       <GifGrid\r\n                       key= {item}\r\n                       category = {item}\r\n                       ></GifGrid>\r\n                   ))\r\n              }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}